AVERAGE_TAX_PERCENTAGE:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        AVG(CC_TAX_PERCENTAGE) AS AverageTaxPercentage
      FROM
        ${STG_CALL_CENTER}
      GROUP BY
        CC_COUNTRY
AVG_ACCT_BALANCE_BY_MARKET:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        AVG(C_ACCTBAL) AS C_ACCTBAL,
        C_MKTSEGMENT
      FROM
        ${STG_CUSTOMERS}
      GROUP BY
        C_MKTSEGMENT
AVG_ACCT_BALANCE_BY_NATION2:
  type: sql
  operation:
    sqlType: View
    type: sql
    lineageGroup:
      Engineering: true
    sql: |-
      SELECT
        N_NAME AS N_NAME,
        AVG(C_ACCTBAL) AS C_ACCTBAL
      FROM
        ${STG_DIM_CUSTOMERS_WITH_NATION}
        GROUP BY N_NAME
CALL_CENTER:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCDS_SF100TCL
    table: CALL_CENTER
CALL_CENTERS_PER_MANAGER:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        COUNT(CC_CALL_CENTER_SK) AS CC_CALL_CENTER_SK,
        CC_MANAGER AS CC_MANAGER
      FROM
        ${STG_CALL_CENTER}
        GROUP BY CC_MANAGER
CHEAPEST_SUPPLIER_FOR_PART:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      WITH RANKED_SUPPLIERS_BY_PART_COST AS (
        SELECT
          ROW_NUMBER() OVER (
            PARTITION BY PS_PARTKEY
            order by
              PS_SUPPLYCOST ASC
          ) AS SupplyCostRank,
          PS_SUPPLYCOST,
          SUPPLIERID,
          S_PHONE,
          S_NAME,
          PS_PARTKEY,
          PS_COMMENT
        FROM
          ${PARTS_WITH_SUPPLIER}
      )
      SELECT
        PS_PARTKEY,
        PS_COMMENT,
        PS_SUPPLYCOST,
        SUPPLIERID,
        S_PHONE,
        S_NAME
      FROM
        RANKED_SUPPLIERS_BY_PART_COST
      WHERE
        SupplyCostRank = 1
CUSTOMER:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    lineageGroup:
      Engineering: true
    dataset: TPCH_SF1
    table: CUSTOMER
CUSTOMER_ORDERS:
  type: sql
  operation:
    sqlType: View
    type: sql
    lineageGroup:
      Engineering: true
    sql: |-
      SELECT
        STG_CUSTOMERS.C_CUSTKEY AS C_CUSTKEY,
        STG_CUSTOMERS.C_NAME AS C_NAME,
        STG_CUSTOMERS.C_ADDRESS AS C_ADDRESS,
        STG_CUSTOMERS.C_NATIONKEY AS C_NATIONKEY,
        STG_CUSTOMERS.C_PHONE AS C_PHONE,
        STG_CUSTOMERS.C_ACCTBAL AS C_ACCTBAL,
        STG_CUSTOMERS.C_MKTSEGMENT AS C_MKTSEGMENT,
        STG_CUSTOMERS.C_COMMENT AS C_COMMENT,
        STG_ORDERS.O_ORDERKEY AS O_ORDERKEY,
        STG_ORDERS.O_CUSTKEY AS O_CUSTKEY,
        STG_ORDERS.O_ORDERSTATUS AS O_ORDERSTATUS,
        STG_ORDERS.O_TOTALPRICE AS O_TOTALPRICE,
        STG_ORDERS.O_ORDERYEAR AS O_ORDERYEAR,
        STG_ORDERS.O_ORDERMONTH AS O_ORDERMONTH,
        STG_ORDERS.O_ORDERDAY AS O_ORDERDAY,
        STG_ORDERS.PRIORITY AS PRIORITY,
        STG_ORDERS.CLERKNUMBER AS CLERKNUMBER,
        STG_ORDERS.O_SHIPPRIORITY AS O_SHIPPRIORITY,
        STG_ORDERS.O_COMMENT AS O_COMMENT
      FROM
        ${STG_CUSTOMERS} AS STG_CUSTOMERS
        INNER JOIN ${STG_ORDERS} AS STG_ORDERS ON STG_CUSTOMERS.
      C_CUSTKEY
        = STG_ORDERS.
        O_CUSTKEY
HIGHEST_COST_PARTS:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        ROW_NUMBER() OVER (
          order by
            PS_SUPPLYCOST desc
        ) AS SupplyCostRank,
        PS_SUPPLYCOST as SupplyCost,
        SUPPLIERID,
        S_PHONE,
        S_NAME
      FROM
        ${PARTS_WITH_SUPPLIER}
INVENTORY:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCDS_SF100TCL
    table: INVENTORY
ITEM:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCDS_SF100TCL
    table: ITEM
LIFETIME_CUSTOMER_VALUE:
  type: sql
  operation:
    sqlType: View
    type: sql
    lineageGroup:
      Engineering: true
    sql: |-
      SELECT
        SUM(O_TOTALPRICE) AS LIFETIME_CUSTOMER_VALUE1,
        C_CUSTKEY AS C_CUSTKEY, 
        C_NAME AS C_NAME, 
        C_PHONE as C_PHONE3, 
        rank() over ( order by LIFETIME_CUSTOMER_VALUE) as CUSTOMER_RANK
      FROM
        ${CUSTOMER_ORDERS}
        GROUP BY C_CUSTKEY, C_NAME, C_PHONE
        ORDER BY CUSTOMER_RANK ASC
NATION:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    lineageGroup:
      Engineering: true
    dataset: TPCH_SF1
    table: NATION
ORDERS:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    lineageGroup:
      Engineering: true
    dataset: TPCH_SF1
    table: ORDERS
ORDERS_BY_MONTH:
  type: sql
  operation:
    sqlType: View
    type: sql
    lineageGroup:
      Engineering: true
    sql: |-
      SELECT
        SUM(O_TOTALPRICE) AS O_TOTALPRICE,
        O_ORDERYEAR AS O_ORDERYEAR,
        O_ORDERMONTH AS O_ORDERMONTH
      FROM
        ${STG_ORDERS}
        GROUP BY O_ORDERYEAR, O_ORDERMONTH
PART:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCH_SF001
    table: PART
PART_AVAILABILITY:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        PS_PARTKEY AS PS_PARTKEY,
        SUM(PS_AVAILQTY) AS PS_AVAILQTY
      FROM
        ${PARTS_WITH_SUPPLIER}
        GROUP BY PS_PARTKEY ORDER BY PS_AVAILQTY ASC
PARTS_WITH_SUPPLIER:
  type: sql
  operation:
    sqlType: Table
    type: sql
    sql: >-
      SELECT
        STG_SUPPLIER.SUPPLIERID AS SupplierID,
        STG_SUPPLIER.S_NAME AS S_NAME,
        STG_SUPPLIER.S_ADDRESS AS S_ADDRESS,
        STG_SUPPLIER.S_NATIONKEY AS S_NATIONKEY,
        STG_SUPPLIER.S_PHONE AS S_PHONE,
        STG_SUPPLIER.S_ACCTBAL AS S_ACCTBAL,
        STG_SUPPLIER.S_COMMENT AS S_COMMENT,
        STG_PARTSUPP.PS_PARTKEY AS PS_PARTKEY,
        STG_PARTSUPP.PS_SUPPKEY AS PS_SUPPKEY,
        STG_PARTSUPP.PS_AVAILQTY AS PS_AVAILQTY,
        STG_PARTSUPP.PS_SUPPLYCOST AS PS_SUPPLYCOST,
        STG_PARTSUPP.PS_COMMENT AS PS_COMMENT
      FROM
        ${STG_PARTSUPP} AS STG_PARTSUPP
        INNER JOIN ${STG_SUPPLIER} AS STG_SUPPLIER ON STG_PARTSUPP.PS_SUPPKEY = STG_SUPPLIER.SupplierID
PARTSUPP:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCH_SF001
    table: PARTSUPP
PHYSICAL_FOOTPRINTS:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: >-
      SELECT
        COUNT (DISTINCT STG_CALL_CENTER.CC_CALL_CENTER_SK) AS NUM_CALL_CENTERS,
        COUNT (DISTINCT STG_STORE.S_STORE_SK) AS NUM_STORES,
        COUNT (DISTINCT STG_WAREHOUSE.W_WAREHOUSE_SK) AS NUM_WAREHOUSES,
        CC_STATE
      FROM
        ${STG_CALL_CENTER} AS STG_CALL_CENTER
        INNER JOIN ${STG_STORE} AS STG_STORE ON STG_CALL_CENTER.CC_STATE = STG_STORE.S_STATE
        INNER JOIN ${STG_WAREHOUSE} AS STG_WAREHOUSE ON STG_STORE.S_STATE = W_STATE
      GROUP BY
        CC_STATE
PRIORITY_TOTALPRICE_ANALYSIS:
  type: sql
  operation:
    sqlType: View
    type: sql
    lineageGroup:
      Engineering: true
    sql: |-
      SELECT
         AVG(O_TOTALPRICE) as AVG_PRICE_FOR_PRIORITY,
         PRIORITY AS PRIORITY
      FROM
        ${CUSTOMER_ORDERS}
        GROUP BY PRIORITY
PROMOTION:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCDS_SF100TCL
    table: PROMOTION
STG_CALL_CENTER:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        CC_CALL_CENTER_SK AS CC_CALL_CENTER_SK,
        CC_CALL_CENTER_ID AS CC_CALL_CENTER_ID,
        CC_REC_START_DATE AS CC_REC_START_DATE,
        CC_REC_END_DATE AS CC_REC_END_DATE,
        DATEDIFF("day", CC_REC_START_DATE,CC_REC_END_DATE) as length,
        CC_CLOSED_DATE_SK AS CC_CLOSED_DATE_SK,
        CC_OPEN_DATE_SK AS CC_OPEN_DATE_SK,
        CC_NAME AS CC_NAME,
        CC_CLASS AS CC_CLASS,
        CC_EMPLOYEES AS CC_EMPLOYEES,
        CC_SQ_FT AS CC_SQ_FT,
        CC_HOURS AS CC_HOURS,
        CC_MANAGER AS CC_MANAGER,
        CC_MKT_ID AS CC_MKT_ID,
        CC_MKT_CLASS AS CC_MKT_CLASS,
        CC_MKT_DESC AS CC_MKT_DESC,
        CC_MARKET_MANAGER AS CC_MARKET_MANAGER,
        CC_DIVISION AS CC_DIVISION,
        CC_DIVISION_NAME AS CC_DIVISION_NAME,
        CC_COMPANY AS CC_COMPANY,
        CC_COMPANY_NAME AS CC_COMPANY_NAME,
        CC_STREET_NUMBER AS CC_STREET_NUMBER,
        CC_STREET_NAME AS CC_STREET_NAME,
        CC_STREET_TYPE AS CC_STREET_TYPE,
        CC_SUITE_NUMBER AS CC_SUITE_NUMBER,
        CC_CITY AS CC_CITY,
        CC_COUNTY AS CC_COUNTY,
        CC_STATE AS CC_STATE,
        CC_ZIP AS CC_ZIP,
        CC_COUNTRY AS CC_COUNTRY,
        CC_GMT_OFFSET AS CC_GMT_OFFSET,
        CC_TAX_PERCENTAGE AS CC_TAX_PERCENTAGE
      FROM
        ${CALL_CENTER}
STG_CUSTOMERS:
  type: sql
  operation:
    sqlType: View
    type: sql
    lineageGroup:
      Engineering: true
    sql: |-
      SELECT
        C_CUSTKEY AS C_CUSTKEY,
        LTRIM(SUBSTRING(C_NAME,10), '0') AS C_NAME,
        C_ADDRESS AS C_ADDRESS,
        C_NATIONKEY AS C_NATIONKEY,
        C_PHONE AS C_PHONE,
        C_ACCTBAL AS C_ACCTBAL,
        C_MKTSEGMENT AS C_MKTSEGMENT,
        C_COMMENT AS C_COMMENT
      FROM
        ${CUSTOMER}
STG_DIM_CUSTOMERS_WITH_NATION:
  type: sql
  operation:
    sqlType: View
    type: sql
    lineageGroup:
      Engineering: true
    sql: >-
      SELECT
        NATION.N_NATIONKEY AS N_NATIONKEY,
        NATION.N_NAME AS N_NAME,
        NATION.N_REGIONKEY AS N_REGIONKEY,
        NATION.N_COMMENT AS N_COMMENT,
        CUSTOMER.C_CUSTKEY AS C_CUSTKEY,
        CUSTOMER.C_NAME AS C_NAME,
        CUSTOMER.C_ADDRESS AS C_ADDRESS,
        CUSTOMER.C_NATIONKEY AS C_NATIONKEY,
        CUSTOMER.C_PHONE AS C_PHONE,
        CUSTOMER.C_ACCTBAL AS C_ACCTBAL,
        CUSTOMER.C_MKTSEGMENT AS C_MKTSEGMENT,
        CUSTOMER.C_COMMENT AS C_COMMENT
      FROM
        ${CUSTOMER} AS CUSTOMER
        INNER JOIN ${NATION} AS NATION ON CUSTOMER.C_NATIONKEY = NATION.N_NATIONKEY
STG_INVENTORY:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        INV_DATE_SK AS INV_DATE_SK,
        INV_ITEM_SK AS INV_ITEM_SK,
        INV_WAREHOUSE_SK AS INV_WAREHOUSE_SK,
        INV_QUANTITY_ON_HAND AS INV_QUANTITY_ON_HAND
      FROM
        ${INVENTORY}
STG_ITEM:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        I_ITEM_SK AS I_ITEM_SK,
        I_ITEM_ID AS I_ITEM_ID,
        I_REC_START_DATE AS I_REC_START_DATE,
        I_REC_END_DATE AS I_REC_END_DATE,
        I_ITEM_DESC AS I_ITEM_DESC,
        I_CURRENT_PRICE AS I_CURRENT_PRICE,
        I_WHOLESALE_COST AS I_WHOLESALE_COST,
        I_BRAND_ID AS I_BRAND_ID,
        I_BRAND AS I_BRAND,
        I_CLASS_ID AS I_CLASS_ID,
        I_CLASS AS I_CLASS,
        I_CATEGORY_ID AS I_CATEGORY_ID,
        I_CATEGORY AS I_CATEGORY,
        I_MANUFACT_ID AS I_MANUFACT_ID,
        I_MANUFACT AS I_MANUFACT,
        I_SIZE AS I_SIZE,
        I_FORMULATION AS I_FORMULATION,
        I_COLOR AS I_COLOR,
        I_UNITS AS I_UNITS,
        I_CONTAINER AS I_CONTAINER,
        I_MANAGER_ID AS I_MANAGER_ID,
        I_PRODUCT_NAME AS I_PRODUCT_NAME
      FROM
        ${ITEM}
STG_ORDERS:
  type: sql
  operation:
    sqlType: View
    type: sql
    lineageGroup:
      Engineering: true
    sql: |-
      SELECT
        O_ORDERKEY AS O_ORDERKEY,
        O_CUSTKEY AS O_CUSTKEY,
        O_ORDERSTATUS AS O_ORDERSTATUS,
        O_TOTALPRICE AS O_TOTALPRICE,
        SPLIT(O_ORDERDATE,'-')[0] as O_ORDERYEAR,
        SPLIT(O_ORDERDATE,'-')[1] as O_ORDERMONTH,
        SPLIT(O_ORDERDATE,'-')[2] as O_ORDERDAY,
        SPLIT(O_ORDERPRIORITY,'-')[1] as PRIORITY,
        LTRIM(SUBSTRING(O_CLERK, 7), '0') as ClerkNumber,
        O_SHIPPRIORITY AS O_SHIPPRIORITY,
        O_COMMENT AS O_COMMENT
      FROM
        ${ORDERS}
STG_PART:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        P_PARTKEY AS P_PARTKEY,
        P_NAME AS P_NAME,
        SUBSTRING(P_MFGR,1) as P_MFGR,
        SUBSTRING(P_MFGR,14) as MFGR_ID,
        SUBSTRING(P_BRAND, 7) AS P_BRAND,
        P_TYPE AS P_TYPE,
        P_SIZE AS P_SIZE,
        P_CONTAINER AS P_CONTAINER,
        SPLIT(P_CONTAINER,' ')[0] as CONTAINER_SIZE,
        P_RETAILPRICE AS P_RETAILPRICE,
        P_COMMENT AS P_COMMENT
      FROM
        ${PART}
STG_PARTSUPP:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        PS_PARTKEY AS PS_PARTKEY,
        PS_SUPPKEY AS PS_SUPPKEY,
        PS_AVAILQTY AS PS_AVAILQTY,
        PS_SUPPLYCOST AS PS_SUPPLYCOST,
        PS_COMMENT AS PS_COMMENT
      FROM
        ${PARTSUPP}
STG_PROMOTION:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        P_PROMO_SK AS P_PROMO_SK,
        P_PROMO_ID AS P_PROMO_ID,
        P_START_DATE_SK AS P_START_DATE_SK,
        P_END_DATE_SK AS P_END_DATE_SK,
        P_END_DATE_SK - P_START_DATE_SK as PROMOTION_DURATION_DAYS,
        P_ITEM_SK AS P_ITEM_SK,
        P_COST AS P_COST,
        P_RESPONSE_TARGET AS P_RESPONSE_TARGET,
        P_PROMO_NAME AS P_PROMO_NAME,
        P_CHANNEL_DMAIL AS P_CHANNEL_DMAIL,
        P_CHANNEL_EMAIL AS P_CHANNEL_EMAIL,
        P_CHANNEL_CATALOG AS P_CHANNEL_CATALOG,
        P_CHANNEL_TV AS P_CHANNEL_TV,
        P_CHANNEL_RADIO AS P_CHANNEL_RADIO,
        P_CHANNEL_PRESS AS P_CHANNEL_PRESS,
        P_CHANNEL_EVENT AS P_CHANNEL_EVENT,
        P_CHANNEL_DEMO AS P_CHANNEL_DEMO,
        P_CHANNEL_DETAILS AS P_CHANNEL_DETAILS,
        P_PURPOSE AS P_PURPOSE,
        P_DISCOUNT_ACTIVE AS P_DISCOUNT_ACTIVE
      FROM
        ${PROMOTION}
STG_STORE:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        S_STORE_SK AS S_STORE_SK,
        S_STORE_ID AS S_STORE_ID,
        S_REC_START_DATE AS S_REC_START_DATE,
        S_REC_END_DATE AS S_REC_END_DATE,
        S_CLOSED_DATE_SK AS S_CLOSED_DATE_SK,
        S_STORE_NAME AS S_STORE_NAME,
        S_NUMBER_EMPLOYEES AS S_NUMBER_EMPLOYEES,
        S_FLOOR_SPACE AS S_FLOOR_SPACE,
        S_HOURS AS S_HOURS,
        SPLIT(S_HOURS, '-')[0] as OpenTime, 
        SPLIT(S_HOURS, '-')[1] as CloseTime, 
        S_MANAGER AS S_MANAGER,
        S_MARKET_ID AS S_MARKET_ID,
        S_MARKET_DESC AS S_MARKET_DESC,
        S_MARKET_MANAGER AS S_MARKET_MANAGER,
        S_DIVISION_ID AS S_DIVISION_ID,
        S_DIVISION_NAME AS S_DIVISION_NAME,
        S_COMPANY_ID AS S_COMPANY_ID,
        S_COMPANY_NAME AS S_COMPANY_NAME,
        S_STREET_NUMBER AS S_STREET_NUMBER,
        S_STREET_NAME AS S_STREET_NAME,
        S_STREET_TYPE AS S_STREET_TYPE,
        S_SUITE_NUMBER AS S_SUITE_NUMBER,
        S_CITY AS S_CITY,
        S_COUNTY AS S_COUNTY,
        S_STATE AS S_STATE,
        S_ZIP AS S_ZIP,
        S_COUNTRY AS S_COUNTRY,
        S_GMT_OFFSET AS S_GMT_OFFSET,
        S_TAX_PRECENTAGE AS S_TAX_PRECENTAGE
      FROM
        ${STORE}
STG_STORE_RETURNS:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        SR_RETURNED_DATE_SK AS SR_RETURNED_DATE_SK,
        SR_RETURN_TIME_SK AS SR_RETURN_TIME_SK,
        SR_ITEM_SK AS SR_ITEM_SK,
        SR_CUSTOMER_SK AS SR_CUSTOMER_SK,
        SR_CDEMO_SK AS SR_CDEMO_SK,
        SR_HDEMO_SK AS SR_HDEMO_SK,
        SR_ADDR_SK AS SR_ADDR_SK,
        SR_STORE_SK AS SR_STORE_SK,
        SR_REASON_SK AS SR_REASON_SK,
        SR_TICKET_NUMBER AS SR_TICKET_NUMBER,
        SR_RETURN_QUANTITY AS SR_RETURN_QUANTITY,
        SR_RETURN_AMT AS SR_RETURN_AMT,
        SR_RETURN_TAX AS SR_RETURN_TAX,
        SR_RETURN_AMT_INC_TAX AS SR_RETURN_AMT_INC_TAX,
        SR_FEE AS SR_FEE,
        SR_RETURN_SHIP_COST AS SR_RETURN_SHIP_COST,
        SR_REFUNDED_CASH AS SR_REFUNDED_CASH,
        SR_REVERSED_CHARGE AS SR_REVERSED_CHARGE,
        SR_STORE_CREDIT AS SR_STORE_CREDIT,
        SR_NET_LOSS AS SR_NET_LOSS
      FROM
        ${STORE_RETURNS}
STG_STORE_SALES:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        SS_SOLD_DATE_SK AS SS_SOLD_DATE_SK,
        SS_SOLD_TIME_SK AS SS_SOLD_TIME_SK,
        SS_ITEM_SK AS SS_ITEM_SK,
        SS_CUSTOMER_SK AS SS_CUSTOMER_SK,
        SS_CDEMO_SK AS SS_CDEMO_SK,
        SS_HDEMO_SK AS SS_HDEMO_SK,
        SS_ADDR_SK AS SS_ADDR_SK,
        SS_STORE_SK AS SS_STORE_SK,
        SS_PROMO_SK AS SS_PROMO_SK,
        SS_TICKET_NUMBER AS SS_TICKET_NUMBER,
        SS_QUANTITY AS SS_QUANTITY,
        SS_WHOLESALE_COST AS SS_WHOLESALE_COST,
        SS_LIST_PRICE AS SS_LIST_PRICE,
        SS_SALES_PRICE AS SS_SALES_PRICE,
        SS_EXT_DISCOUNT_AMT AS SS_EXT_DISCOUNT_AMT,
        SS_EXT_SALES_PRICE AS SS_EXT_SALES_PRICE,
        SS_EXT_WHOLESALE_COST AS SS_EXT_WHOLESALE_COST,
        SS_EXT_LIST_PRICE AS SS_EXT_LIST_PRICE,
        SS_EXT_TAX AS SS_EXT_TAX,
        SS_COUPON_AMT AS SS_COUPON_AMT,
        SS_NET_PAID AS SS_NET_PAID,
        SS_NET_PAID_INC_TAX AS SS_NET_PAID_INC_TAX,
        SS_NET_PROFIT AS SS_NET_PROFIT
      FROM
        ${STORE_SALES}
STG_SUPPLIER:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        S_SUPPKEY AS SupplierID,
        S_NAME AS S_NAME,
        S_ADDRESS AS S_ADDRESS,
        S_NATIONKEY AS S_NATIONKEY,
        S_PHONE AS S_PHONE,
        S_ACCTBAL AS S_ACCTBAL,
        S_COMMENT AS S_COMMENT
      FROM
        ${SUPPLIER}
STG_WAREHOUSE:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        W_WAREHOUSE_SK AS W_WAREHOUSE_SK,
        W_WAREHOUSE_ID AS W_WAREHOUSE_ID,
        W_WAREHOUSE_NAME AS W_WAREHOUSE_NAME,
        W_WAREHOUSE_SQ_FT AS W_WAREHOUSE_SQ_FT,
        W_STREET_NUMBER AS W_STREET_NUMBER,
        W_STREET_NAME AS W_STREET_NAME,
        W_STREET_TYPE AS W_STREET_TYPE,
        W_SUITE_NUMBER AS W_SUITE_NUMBER,
        W_CITY AS W_CITY,
        W_COUNTY AS W_COUNTY,
        W_STATE AS W_STATE,
        W_ZIP AS W_ZIP,
        W_COUNTRY AS W_COUNTRY,
        W_GMT_OFFSET AS W_GMT_OFFSET
      FROM
        ${WAREHOUSE}
STG_WEBSITE:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: |-
      SELECT
        WEB_SITE_SK AS WEB_SITE_SK,
        WEB_SITE_ID AS WEB_SITE_ID,
        WEB_REC_START_DATE AS WEB_REC_START_DATE,
        WEB_REC_END_DATE AS WEB_REC_END_DATE,
        WEB_NAME AS WEB_NAME,
        WEB_OPEN_DATE_SK AS WEB_OPEN_DATE_SK,
        WEB_CLOSE_DATE_SK AS WEB_CLOSE_DATE_SK,
        WEB_CLASS AS WEB_CLASS,
        WEB_MANAGER AS WEB_MANAGER,
        WEB_MKT_ID AS WEB_MKT_ID,
        WEB_MKT_CLASS AS WEB_MKT_CLASS,
        WEB_MKT_DESC AS WEB_MKT_DESC,
        WEB_MARKET_MANAGER AS WEB_MARKET_MANAGER,
        WEB_COMPANY_ID AS WEB_COMPANY_ID,
        WEB_COMPANY_NAME AS WEB_COMPANY_NAME,
        WEB_STREET_NUMBER AS WEB_STREET_NUMBER,
        WEB_STREET_NAME AS WEB_STREET_NAME,
        WEB_STREET_TYPE AS WEB_STREET_TYPE,
        WEB_SUITE_NUMBER AS WEB_SUITE_NUMBER,
        WEB_CITY AS WEB_CITY,
        WEB_COUNTY AS WEB_COUNTY,
        WEB_STATE AS WEB_STATE,
        WEB_ZIP AS WEB_ZIP,
        WEB_COUNTRY AS WEB_COUNTRY,
        WEB_GMT_OFFSET AS WEB_GMT_OFFSET,
        WEB_TAX_PERCENTAGE AS WEB_TAX_PERCENTAGE
      FROM
        ${WEB_SITE}
STORE:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCDS_SF100TCL
    table: STORE
STORE_RETURNS:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCDS_SF100TCL
    table: STORE_RETURNS
STORE_SALES:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCDS_SF100TCL
    table: STORE_SALES
SUPPLIER:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCH_SF001
    table: SUPPLIER
SUPPLIERS_FOR_LOW_AVAILABILITY:
  type: sql
  operation:
    sqlType: View
    type: sql
    sql: >-
      SELECT
        PARTS_WITH_SUPPLIER.SUPPLIERID AS SUPPLIERID,
        PARTS_WITH_SUPPLIER.S_NAME AS S_NAME,
        PARTS_WITH_SUPPLIER.S_ADDRESS AS S_ADDRESS,
        PARTS_WITH_SUPPLIER.S_NATIONKEY AS S_NATIONKEY,
        PARTS_WITH_SUPPLIER.S_PHONE AS S_PHONE,
        PARTS_WITH_SUPPLIER.S_ACCTBAL AS S_ACCTBAL,
        PARTS_WITH_SUPPLIER.S_COMMENT AS S_COMMENT,
        PARTS_WITH_SUPPLIER.PS_SUPPKEY AS PS_SUPPKEY,
        PARTS_WITH_SUPPLIER.PS_SUPPLYCOST AS PS_SUPPLYCOST,
        PARTS_WITH_SUPPLIER.PS_COMMENT AS PS_COMMENT,
        PART_AVAILABILITY.PS_AVAILQTY
      FROM
        ${PART_AVAILABILITY} AS PART_AVAILABILITY
        INNER JOIN ${PARTS_WITH_SUPPLIER} AS PARTS_WITH_SUPPLIER ON PART_AVAILABILITY.PS_PARTKEY
        = PARTS_WITH_SUPPLIER.PS_PARTKEY 
        ORDER BY PS_AVAILQTY ASC
UNFULFILLED_ORDERS:
  type: sql
  operation:
    sqlType: View
    type: sql
    lineageGroup:
      Engineering: true
    sql: |-
      SELECT
        C_CUSTKEY AS C_CUSTKEY,
        C_NAME AS C_NAME,
        C_ADDRESS AS C_ADDRESS,
        C_NATIONKEY AS C_NATIONKEY,
        C_PHONE AS C_PHONE,
        C_ACCTBAL AS C_ACCTBAL,
        C_MKTSEGMENT AS C_MKTSEGMENT,
        C_COMMENT AS C_COMMENT,
        O_ORDERKEY AS O_ORDERKEY,
        O_CUSTKEY AS O_CUSTKEY,
        O_ORDERSTATUS AS O_ORDERSTATUS,
        O_TOTALPRICE AS O_TOTALPRICE,
        O_ORDERYEAR AS O_ORDERYEAR,
        O_ORDERMONTH AS O_ORDERMONTH,
        O_ORDERDAY AS O_ORDERDAY,
        PRIORITY AS PRIORITY,
        CLERKNUMBER AS CLERKNUMBER,
        O_SHIPPRIORITY AS O_SHIPPRIORITY,
        O_COMMENT AS O_COMMENT
      FROM
        ${CUSTOMER_ORDERS}
        WHERE O_ORDERSTATUS = 'O'
WAREHOUSE:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCDS_SF10TCL
    table: WAREHOUSE
WEB_SITE:
  type: sourceInput
  operation:
    database: SNOWFLAKE_SAMPLE_DATA
    type: sourceInput
    dataset: TPCDS_SF10TCL
    table: WEB_SITE
